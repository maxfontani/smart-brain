{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/logo.png","components/Logo/Logo.js","components/Signin/Signin.js","components/Register/Register.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","resetState","userName","entries","className","href","onClick","Logo","onSubmit","options","max","scale","style","height","width","src","logo","alt","Signin","props","onLoginChange","event","setState","signInLogin","target","value","onPassChange","signInPass","onSubmitSignIn","state","fetch","String","prototype","concat","process","method","headers","body","JSON","stringify","login","password","then","response","json","user","id","loadUser","alert","this","htmlFor","onChange","type","name","React","Component","Register","newLogin","onEmailChange","newEmail","newPass","emailCheck","email","test","onSubmitReg","length","catch","err","console","log","ImageLinkForm","onInputChange","facesDetected","manyFaces","FaceRecognition","inputUrl","boxes","map","box","i","top","topRow","bottom","bottomRow","left","leftCol","right","rightCol","particlesParams","fpsLimit","interactivity","detectsOn","events","enable","mode","resize","modes","push","quantity","repulse","distance","duration","particles","number","density","enabled","value_area","initialState","input","route","joined","initialSearchState","App","calcFaceLocation","data","facesArr","outputs","regions","region","region_info","bounding_box","image","document","getElementById","Number","forEach","face","left_col","top_row","right_col","bottom_row","displayFaceBox","boxArr","count","Object","assign","resetSearchState","renderScreen","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.24ff9d41.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Navigation = ({onRouteChange, resetState, userName, entries}) => {\r\n\r\n    return (\r\n        <nav className='ma0 pr0 pt1'>\r\n            <div className = 'pa0 f4 ma2 dib z-2'>\r\n                <a \r\n                    className='pl1 pr1 link shadow5 b pointer z-2'>\r\n                    {userName}\r\n                </a>\r\n                    |\r\n                        {entries \r\n                            ? <a className='pl1 pr1 fw5'>Images scanned: {entries}</a> \r\n                            : <a className='pl1 pr1 fw5'>No images scanned yet</a>}\r\n                | \r\n                <a href=''\r\n                    className='pl1 pr1 fw6 link dim black pointer z-2' \r\n                    onClick={() => {\r\n                        onRouteChange('signin')\r\n                        resetState()\r\n                    }}>\r\n                    Sign Out\r\n                </a> \r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","export default __webpack_public_path__ + \"static/media/logo.77e2ad69.png\";","import React from 'react'\r\nimport Tilt from 'react-tilt'\r\nimport logo from './logo.png'\r\n \r\n\r\nconst Logo = ({onSubmit}) => {\r\n    return (\r\n        <div className='center pa0'>\r\n            <Tilt className=\"Tilt br2 shadow-2 z-2\" options={{ max : 30,  scale : 1.25}} style={{ height: 165, width: 150 }}>\r\n                <div className=\"Tilt-inner ma0\"> \r\n                    <img \r\n                        className='logo' \r\n                        src = {logo} \r\n                        alt='Smart Brain logo' \r\n                        onClick= {onSubmit}\r\n                    />\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\nexport default Logo\r\n","import React from 'react'\r\nimport path from 'path'\r\n\r\nclass Signin extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            signInLogin: '',\r\n            signInPass: ''\r\n        }\r\n    }\r\n\r\n    onLoginChange = (event) => {\r\n        this.setState({signInLogin: event.target.value})\r\n    }\r\n\r\n    onPassChange = (event) => {\r\n        this.setState({signInPass: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n\r\n        if (!this.state.signInPass || !this.state.signInLogin) {\r\n            alert('Please enter your Login and Password.')\r\n        } else {\r\n            fetch(String.prototype.concat(process.env.REACT_APP_SERVER_URL,'signin'), {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    login: this.state.signInLogin,\r\n                    password: this.state.signInPass\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if (user.id) {\r\n                    this.props.onRouteChange('home')\r\n                    this.props.loadUser(user)\r\n                } else {\r\n                    alert('Login/password mismatch!')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const { onRouteChange } = this.props\r\n        return (\r\n            <main className=\"pa4\">\r\n                <div className='ba bg-black-05 b--black-30 mv4 mw6 center shadow-5'>\r\n                    <div className=\"z-2 \">\r\n                        <fieldset id=\"sign_up\" className=\"b--transparent ph0 mh0\">\r\n                            <legend className=\"code f2 fw6 pa1 mh0 center\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"code fw6 lh-copy f5\" htmlFor=\"login-address\">Login</label>\r\n                                <input \r\n                                    className=\"b--black pa2 white input-reset ba bg-transparent w-100 hover-bg-black hover-white\" \r\n                                    onChange={this.onLoginChange} \r\n                                    type=\"email\" \r\n                                    name=\"email-address\"  \r\n                                    id=\"email-address\"/>\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"code db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\r\n                                <input \r\n                                    className=\"b--black white b pa2 input-reset ba bg-transparent w-100 hover-bg-black hover-white\" \r\n                                    onChange={this.onPassChange} \r\n                                    type=\"password\" \r\n                                    name=\"password\"  \r\n                                    id=\"password\"/>\r\n                            </div>\r\n                        </fieldset>\r\n                        <input\r\n                            onClick = {this.onSubmitSignIn} \r\n                            className=\"shadow-1 w-40 b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 hover-bg-black hover-white\" \r\n                            type=\"submit\" \r\n                            value=\"Sign In\"/>\r\n                        <div className=\"lh-copy mt3\">\r\n                            <input\r\n                                onClick = {() => onRouteChange('register')} \r\n                                className=\"shadow-1 w-40 b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 hover-bg-black hover-white\" \r\n                                type=\"submit\" \r\n                                value=\"I'm New\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signin\r\n","import React from 'react'\r\nimport path from 'path'\r\n\r\nclass Register extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            newLogin: '',\r\n            newEmail: '',\r\n            newPass: ''\r\n        }\r\n    }\r\n\r\n    onLoginChange = (event) => {\r\n        this.setState({newLogin: event.target.value})\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({newEmail: event.target.value})\r\n    }\r\n\r\n    onPassChange = (event) => {\r\n        this.setState({newPass: event.target.value})\r\n    }\r\n\r\n    emailCheck = (email) => {\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i\r\n        return re.test(email)        \r\n    }\r\n\r\n    onSubmitReg = () => {\r\n\r\n        if (!this.state.newEmail.length || !this.state.newPass || !this.state.newLogin) {\r\n            alert('All fields are required.')\r\n        } else {\r\n            if (!this.emailCheck(this.state.newEmail)) {\r\n                alert('Invalid e-mail address.')\r\n            } else {\r\n                fetch(String.prototype.concat(process.env.REACT_APP_SERVER_URL, 'register'), {\r\n                    method: 'post',\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        email: this.state.newEmail,\r\n                        password: this.state.newPass,\r\n                        login: this.state.newLogin\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(user => {\r\n                    if (user.login) {\r\n                        this.props.loadUser(user)\r\n                        this.props.onRouteChange('home')\r\n                    } else {\r\n                        alert('Registration failed. Try another login/password.')\r\n                    }\r\n                })\r\n                .catch(err=> {\r\n                    alert('Oops, something went wrong...')\r\n                    console.log('error:',err)})\r\n            }\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const { onRouteChange } = this.props\r\n        return (\r\n            <main className=\"pa4\">\r\n                <div className='ba bg-black-05  b--black-30 mv4 mw6 center shadow-5'>\r\n                    <div className=\"z-2 measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"pa1 code f2 fw6 ph0 mh0 pb1 center\">New Account</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"code db fw6 lh-copy f5\" htmlFor=\"name\">Login</label>\r\n                            <input\r\n                                onChange={this.onLoginChange} \r\n                                className=\"b--black pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"text\" \r\n                                name=\"name\" \r\n                                id=\"name\"/>\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"code db fw6 lh-copy f5\" htmlFor=\"email-address\">Email</label>\r\n                            <input\r\n                                onChange={this.onEmailChange} \r\n                                className=\"b--black pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"email\" \r\n                                name=\"email-address\"\r\n                                id=\"email-address\"/>\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"code db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\r\n                            <input\r\n                                onChange={this.onPassChange} \r\n                                className=\"b--black b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"password\" \r\n                                name=\"password\"  \r\n                                id=\"password\"/>\r\n                        </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input\r\n                                onClick = {this.onSubmitReg} \r\n                                className=\"shadow-1 w-50 b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 hover-bg-black hover-white\" \r\n                                type=\"submit\" \r\n                                value=\"Register\"/>\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                            <input\r\n                                onClick = {() => this.props.onRouteChange('signin')} \r\n                                className=\"shadow-1 w-50 b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 hover-bg-black hover-white\" \r\n                                type=\"submit\" \r\n                                value=\"To Sign In\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\n \r\nconst ImageLinkForm = ({onInputChange, facesDetected}) => {\r\n\r\n    let manyFaces = false\r\n    if (facesDetected > 1) {\r\n        manyFaces = true\r\n    }\r\n\r\n    return (\r\n        <div className='z-0'>\r\n            {facesDetected\r\n                ? <p className='f2 white code'>Smart Brain has detected {facesDetected} face{manyFaces ? 's' : ''} in your image</p> \r\n                : <p className='f2 code'>Smart Brain will detect faces in your image</p>                 \r\n            }\r\n            <p className='f3 code'>1. Enter image URL</p>\r\n            <p className='f3 code'>2. Click on the Smart Brain</p>\r\n            <div className='center'>\r\n                <input className='input-url f4 pa0 w-70 shadow-2 center z-2' type='text' onChange={onInputChange} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ImageLinkForm\r\n","import React from 'react'\r\n\r\nconst FaceRecognition = ({inputUrl, boxes}) => {\r\n    if (boxes.length) {\r\n        return (\r\n            <div className='mw9 center'>\r\n                <div className='absolute pb4 z-2'>\r\n                    <img id ='input-image' className='shadow-5 z-2' alt='' src={inputUrl}/>\r\n                        {boxes.map((box, i) => {\r\n                            return ( \r\n                                <div key = {i} className='bounding-box z-3' style={{\r\n                                    top: box.topRow, \r\n                                    bottom: box.bottomRow, \r\n                                    left: box.leftCol, \r\n                                    right: box.rightCol}}>\r\n                                </div>\r\n                            )}\r\n                        )}\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n    }   else {\r\n            return (\r\n                <div className='mw9 center'>\r\n                    <div className='absolute mt2'>\r\n                        <img id ='input-image' className='z-2' alt='' src={inputUrl}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n}\r\n    \r\nexport default FaceRecognition\r\n","import React from 'react'\nimport Navigation from '../components/Navigation/Navigation'\nimport Logo from '../components/Logo/Logo'\nimport Signin from '../components/Signin/Signin'\nimport Register from '../components/Register/Register'\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm'\nimport FaceRecognition from '../components/FaceRecognition/FaceRecognition'\nimport Particles from 'react-particles-js'\nimport './App.css'\nimport 'tachyons'\n\nconst particlesParams = {\n  fpsLimit: 60,\n  interactivity: {\n    detectsOn: \"canvas\",\n    events: {\n      onClick: {\n        enable: true,\n        mode: \"push\",\n      },\n\n      resize: true,\n    },\n    modes: {\n      push: {\n        quantity: 1,\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4,\n      },\n    },\n  },\n    particles: {\n    number: {\n      value: 90,\n        density: {\n          enabled: true,\n          value_area: 100\n        }\n    }\n  }\n}\n\nconst initialState = {\n  // SERVER_URL: 'https://smart-brain-serv.herokuapp.com/',\n  input: '',\n  inputUrl: '',\n  boxes: [],\n  route: 'signin',\n  facesDetected: 0,\n  user: {\n    id: 0,\n    login: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nconst initialSearchState = {\n  input: '',\n  inputUrl: '',\n  boxes: [],\n  facesDetected: 0\n}\n\nclass App extends React.Component {\n  constructor () {\n    super()\n    this.state = initialState\n  }\n\n  calcFaceLocation = (data) => {\n    const facesArr = data.outputs[0].data.regions.map(region => region.region_info.bounding_box)\n    const image = document.getElementById('input-image')\n    const width = Number(image.width)\n    const height = Number(image.height)\n\n    facesArr.forEach(face => {\n        face.leftCol = face.left_col * width\n        face.topRow = face.top_row * height\n        face.rightCol = width - (face.right_col * width)\n        face.bottomRow = height - (face.bottom_row * height)\n      })\n      this.setState({facesDetected: facesArr.length})\n      return facesArr\n  }\n\n  displayFaceBox = (boxArr) => {\n    this.setState({boxes: boxArr})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input:event.target.value})\n  }\n\n  onSubmit = (event) => {\n    this.setState({inputUrl: this.state.input})\n    fetch(String.prototype.concat(process.env.REACT_APP_SERVER_URL, 'imageurl'), {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        inputUrl: this.state.input\n      })\n    })\n    .then(response => response.json())\n    .then(response => {\n      fetch(String.prototype.concat(process.env.REACT_APP_SERVER_URL, 'image'), {\n        method: 'put',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n            id: this.state.user.id\n        })\n      })\n        .then(response => response.json())\n        .then(count => {\n            this.setState(Object.assign(this.state.user, {entries: count}))\n        })\n        this.displayFaceBox(this.calcFaceLocation(response))\n        },\n        err => {\n          alert(`We got a negative response..\\n${err}`)\n          this.resetSearchState()\n      })\n    .catch(err => {\n      alert(`Something went wrong..\\n${err}`)\n      this.resetSearchState()\n    })\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signin') {\n      this.resetState()\n    } else {\n      this.setState({route: route})\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      login: data.login,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  resetState = () => {\n    this.setState(initialState)\n  }\n\n  resetSearchState = () => {\n    this.setState(initialSearchState)\n  }\n\n  renderScreen = () => {\n    switch(this.state.route) {\n      case 'signin':\n        return <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n      case 'register':\n        return <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n      case 'home':\n        return ( \n          <div>\n            <Navigation onRouteChange={this.onRouteChange} resetState={this.resetState} userName={this.state.user.login} entries={this.state.user.entries} /> \n            <Logo onSubmit={this.onSubmit} />\n            <ImageLinkForm onInputChange={this.onInputChange} facesDetected={this.state.facesDetected} />\n            <FaceRecognition inputUrl={this.state.inputUrl} boxes={this.state.boxes} /> \n          </div>\n        )\n      default: \n        return <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"App\">\n        <Particles className='particles z-1' params={particlesParams}/>\n        {this.renderScreen()}\n      </div>\n    )\n  }  \n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}